{"version":3,"sources":["components/layout/SignedinLinks.js","reduxs/actions/ActionsAuth.js","reduxs/constants/Constants.js","components/layout/SignedoutLinks.js","components/layout/Navbar.js","components/dashboard/Notification.js","components/project/Rootproject.js","components/project/Projectslist.js","components/dashboard/Preloader.js","components/dashboard/Dashboard.js","components/project/Projectdetail.js","components/auth/Signin.js","components/auth/Signup.js","components/project/Createproject.js","reduxs/actions/ActionsProjects.js","serviceWorker.js","reduxs/reducers/ReducerAuth.js","reduxs/reducers/ReducerProject.js","reduxs/reducers/ReducerRoot.js","config/firebaseConfig.js","reduxs/store/store.js","index.js","components/layout/App.js"],"names":["connect","state","profile","firebaseState","dispatch","onLogOut","getState","firebase","getFirebase","auth","signOut","then","type","logout","initials","className","to","onClick","SignedoutLinks","signInOrOut","uid","Notification","props","notifications","map","notif","key","id","user","content","moment","time","toDate","fromNow","Rootproject","project","title","authorFirstName","authorLastName","createdAt","projectDate","calendar","Projectslist","projects","projectPost","Preloader","Dashboard","this","userAuth","React","Component","compose","firestoreState","ordered","firestoreConnect","collection","orderBy","limit","match","params","data","Signin","handleChange","e","setState","target","value","handleSubmit","preventDefault","onSignIn","email","password","authError","message","isLoaded","onSubmit","htmlFor","onChange","authState","credential","credentials","signInWithEmailAndPassword","catch","error","Signup","onSignUp","firstName","lastName","newUser","getFirestore","firestore","createUserWithEmailAndPassword","res","doc","set","signUp","Createproject","onCreateProject","history","push","add","authorID","Date","actionCreateProject","Boolean","window","location","hostname","INITIAL_STATE","handleErrorAuth","action","handleSuccessAuth","ReducerAuth","handleCreateStory","handleCreateError","ReducerProject","ReducerRoot","combineReducers","projectState","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","logger","createLogger","store","createStore","undefined","applyMiddleware","thunk","withExtraArgument","reduxFirestore","firebaseConfig","rrfProps","config","userProfile","useFirestoreForProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","render","children","useSelector","exact","path","component","Projectdetail","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a9fb9705.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { signOut } from '../../reduxs/actions/ActionsAuth';\n\nfunction SignedinLinks({ onLogOut, profile }) {\n  const { initials } = profile;\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/create\"> New Project </NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/\" onClick={onLogOut}>\n          Log Out\n        </NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\">\n          {initials}\n        </NavLink>\n      </li>\n    </ul>\n  );\n}\n\nconst mapStateToProps = state => ({\n  profile: state.firebaseState.profile,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onLogOut: () => dispatch(signOut()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignedinLinks);\n","import {\n  LOGIN_SUCCESS,\n  LOGIN_ERROR,\n  SIGNOUT_SUCCESS,\n  SIGNUP_SUCCESS,\n  SIGNUP_ERROR,\n} from '../constants/Constants';\n\nexport const signIn = credentials => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(credentials.email, credentials.password)\n      .then(() => dispatch({ type: LOGIN_SUCCESS }))\n      .catch(error => dispatch({ type: LOGIN_ERROR, error }));\n  };\n};\n\nexport const signOut = () => {\n  return (dispatch, getState, { getFirebase }) => {\n    const firebase = getFirebase();\n    firebase\n      .auth()\n      .signOut()\n      .then(() => dispatch({ type: SIGNOUT_SUCCESS }));\n    firebase.logout();\n  };\n};\n\nexport const signUp = newUser => {\n  return (dispatch, getState, { getFirebase, getFirestore }) => {\n    const firebase = getFirebase();\n    const firestore = getFirestore();\n    const { firstName, lastName, email, password } = newUser;\n    const initials = firstName[0] + lastName[0];\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(res => {\n        return firestore\n          .collection('users')\n          .doc(res.user.uid)\n          .set({\n            firstName,\n            lastName,\n            initials,\n          });\n      })\n      .then(() => dispatch({ type: SIGNUP_SUCCESS }))\n      .catch(error => dispatch({ type: SIGNUP_ERROR, error }));\n  };\n};\n","export const CREATE_PROJECT = 'ADD_PROJECT';\nexport const CREATE_PROJECT_ERROR = 'CREATE_PROJECT_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const SIGNOUT_SUCCESS = 'SIGNOUT_SUCCESS';\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_ERROR = 'SIGNUP_ERROR';\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport default function SignedoutLinks() {\n  return (\n    <ul className=\"right\">\n      <li>\n        <NavLink to=\"/signup\"> Sign Up </NavLink>\n      </li>\n      <li>\n        <NavLink to=\"/signin\"> Log In </NavLink>\n      </li>\n    </ul>\n  );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport SignedinLinks from './SignedinLinks';\nimport SignedoutLinks from './SignedoutLinks';\n\nfunction Navbar({ auth, profile }) {\n  const { uid } = auth;\n  const signInOrOut = uid ? <SignedinLinks /> : <SignedoutLinks />;\n  return (\n    <nav className=\"nav wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to=\"/\" className=\"brand-logo\">\n          postITon\n        </Link>\n        {signInOrOut}\n      </div>\n    </nav>\n  );\n}\n\nconst mapStateToProps = state => ({\n  auth: state.firebaseState.auth,\n});\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from 'react';\nimport moment from 'moment';\n\nexport default function Notification(props) {\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title deep-orange-text accent-2 center\">NOTIFICATIONS</span>\n          <ul className=\"notification\">\n            {notifications &&\n              notifications.map(notif => (\n                <li key={notif.id}>\n                  <span className=\"orange-text\">{`${notif.user} `}</span>\n                  <span>{notif.content}</span>\n                  <div className=\"grey-text note-date\">{moment(notif.time.toDate()).fromNow()}</div>\n                </li>\n              ))}\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport moment from 'moment';\n\nexport default function Rootproject({ project }) {\n  const { title, authorFirstName, authorLastName, createdAt } = project;\n  const projectDate = moment(createdAt.toDate()).calendar();\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title\">{title}</span>\n        <p>{`Posted by ${authorFirstName} ${authorLastName}`}</p>\n        <p className=\"grey-text\">{projectDate}</p>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Rootproject from './Rootproject';\n\nexport default function Projectslist({ projects }) {\n  const projectPost = projects.map(project => {\n    return (\n      <Link to={`/project/${project.id}`} key={project.id}>\n        <Rootproject project={project} />\n      </Link>\n    );\n  });\n  return <div className=\"project-list section\">{projects && projectPost}</div>;\n}\n","import React from 'react';\n\nexport default function Preloader() {\n  return (\n    <div className=\"bar\">\n      <div className=\"circle\" />\n      <h3 className=\"red-text loading-text center\">loading project</h3>\n    </div>\n  );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Redirect } from 'react-router-dom';\nimport Notification from './Notification';\nimport Projectlist from '../project/Projectslist';\nimport Preloader from './Preloader';\n\nclass Dashboard extends React.Component {\n  render() {\n    const { projects, userAuth, notifications } = this.props;\n    if (!userAuth.uid) return <Redirect to=\"/signin\" />;\n    return !projects ? (\n      <Preloader />\n    ) : (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <Projectlist projects={projects} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notification notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  projects: state.firestoreState.ordered.project,\n  userAuth: state.firebaseState.auth,\n  notifications: state.firestoreState.ordered.notifications,\n});\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'project', orderBy: ['createdAt', 'desc'] },\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc'] },\n  ]),\n)(Dashboard);\n","import React from 'react';\nimport moment from 'moment';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { firestoreConnect } from 'react-redux-firebase';\n\nfunction Projectdetail(props) {\n  const { project, userAuth } = props;\n  if (!userAuth.uid) return <Redirect to=\"/signin\" />;\n  if (project) {\n    const { title, content, authorFirstName, authorLastName, createdAt } = project;\n    const projectDate = moment(createdAt.toDate()).calendar();\n    return (\n      <div className=\"container section project-details\">\n        <div className=\"card z-depth-0\">\n          <div className=\"card-content\">\n            {/* eslint-disable-next-line react/jsx-one-expression-per-line */}\n            <span className=\"card-title\"> {title} </span>\n            <p>{content}</p>\n          </div>\n          <div className=\"card-action red lighten-1 white-text\">\n            <div>{`Posted by ${authorFirstName} ${authorLastName}`}</div>\n            <div>{projectDate}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  return (\n    <div className=\"container center white-text loading-text\">\n      <p>Loading Project...</p>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state, props) => {\n  const { id } = props.match.params;\n  const projects = state.firestoreState.data.project;\n  const project = projects ? projects[id] : null;\n  return {\n    userAuth: state.firebaseState.auth,\n    project,\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{ collection: 'project' }]),\n)(Projectdetail);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { signIn } from '../../reduxs/actions/ActionsAuth';\n\nclass Signin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n    };\n  }\n\n  handleChange = e =>\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { onSignIn } = this.props;\n    onSignIn(this.state);\n  };\n\n  render() {\n    const { handleChange, handleSubmit } = this;\n    const { authError, userAuth } = this.props;\n    const message = authError ? 'Incorrect username/password' : 'Login success';\n    if (!userAuth.isLoaded) return <div />;\n    if (userAuth.uid) return <Redirect to=\"/\" />;\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" onChange={handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" onChange={handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\" type=\"submit\">\n              Log In\n            </button>\n            {authError && <div className=\"red-text center\">{message}</div>}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  authError: state.authState.authError,\n  userAuth: state.firebaseState.auth,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSignIn: credential => dispatch(signIn(credential)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signin);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { signUp } from '../../reduxs/actions/ActionsAuth';\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      firstName: '',\n      lastName: '',\n    };\n  }\n\n  handleChange = e =>\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { onSignUp } = this.props;\n    onSignUp(this.state);\n    this.setState({\n      password: '',\n    });\n  };\n\n  render() {\n    const { handleChange, handleSubmit } = this;\n    const { password } = this.state;\n    const { userAuth, authError } = this.props;\n    if (userAuth.uid) return <Redirect to=\"/\" />;\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"row\">\n            <div className=\"input-field col s6\">\n              <input type=\"text\" id=\"firstName\" onChange={handleChange} />\n              <label htmlFor=\"firstName\">First Name</label>\n            </div>\n            <div className=\"input-field col s6\">\n              <label htmlFor=\"lastName\">Last Name</label>\n              <input type=\"text\" id=\"lastName\" onChange={handleChange} />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"input-field col s12\">\n              <label htmlFor=\"email\">Email</label>\n              <input type=\"email\" id=\"email\" onChange={handleChange} />\n            </div>\n            <div className=\"input-field col s12\">\n              <label htmlFor=\"password\">Password</label>\n              <input type=\"password\" value={password} id=\"password\" onChange={handleChange} />\n            </div>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\" type=\"submit\">\n              Log In\n            </button>\n          </div>\n          {authError && <p className=\"red-text center\">{authError}</p>}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  userAuth: state.firebaseState.auth,\n  authError: state.authState.authError,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSignUp: newUser => dispatch(signUp(newUser)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Signup);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { actionCreateProject } from '../../reduxs/actions/ActionsProjects';\n\nclass Createproject extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      content: ``,\n    };\n  }\n\n  handleChange = e =>\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { onCreateProject, history } = this.props;\n    onCreateProject(this.state);\n    history.push('/');\n  };\n\n  render() {\n    const { handleChange, handleSubmit } = this;\n    const { userAuth } = this.props;\n    if (!userAuth.uid) return <Redirect to=\"/signin\" />;\n    return (\n      <div className=\"container\">\n        <form className=\"white\" onSubmit={handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Create New Project</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" id=\"title\" onChange={handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"content\">Project content</label>\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\" type=\"submit\">\n              Create Projects\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  userAuth: state.firebaseState.auth,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onCreateProject: project => dispatch(actionCreateProject(project)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Createproject);\n","import { CREATE_PROJECT, CREATE_PROJECT_ERROR } from '../constants/Constants';\n\nexport const actionCreateProject = project => {\n  return (dispatch, getState, { getFirestore, getFirebase }) => {\n    const firestore = getFirestore();\n    const { firstName, lastName } = getState().firebaseState.profile;\n    const { uid } = getState().firebaseState.auth;\n    firestore\n      .collection('project')\n      .add({\n        ...project,\n        authorFirstName: firstName,\n        authorLastName: lastName,\n        authorID: uid,\n        createdAt: new Date(),\n      })\n      .then(() => dispatch({ type: CREATE_PROJECT, project }))\n      .catch(error => dispatch({ type: CREATE_PROJECT_ERROR, error }));\n  };\n};\n\nexport const actionDeleteProject = project => ({\n  type: 'REMOVE_PROJECT',\n  project,\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  LOGIN_SUCCESS,\n  LOGIN_ERROR,\n  SIGNOUT_SUCCESS,\n  SIGNUP_SUCCESS,\n  SIGNUP_ERROR,\n} from '../constants/Constants';\n\nconst INITIAL_STATE = {\n  authError: null,\n};\n\nconst handleErrorAuth = (state, action) => ({\n  ...state,\n  authError: action.error.message,\n});\n\nconst handleSuccessAuth = (state, action) => ({\n  ...state,\n  authError: null,\n});\n\nconst ReducerAuth = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case LOGIN_ERROR:\n    case SIGNUP_ERROR:\n      return handleErrorAuth(state, action);\n    case LOGIN_SUCCESS:\n    case SIGNUP_SUCCESS:\n      return handleSuccessAuth(state, action);\n    case SIGNOUT_SUCCESS:\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default ReducerAuth;\n","import { CREATE_PROJECT, CREATE_PROJECT_ERROR } from '../constants/Constants';\n\nconst INITIAL_STATE = {\n  projects: [],\n};\n\nconst handleCreateStory = (state, action) => ({\n  projects: action.project,\n});\n\nconst handleCreateError = (state, action) => ({\n  error: action.error,\n});\n\nconst ReducerProject = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CREATE_PROJECT:\n      return handleCreateStory(state, action);\n    case CREATE_PROJECT_ERROR:\n      return handleCreateError(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default ReducerProject;\n","import { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\nimport ReducerAuth from './ReducerAuth';\nimport ReducerProject from './ReducerProject';\n\nconst ReducerRoot = combineReducers({\n  authState: ReducerAuth,\n  projectState: ReducerProject,\n  firestoreState: firestoreReducer,\n  firebaseState: firebaseReducer,\n});\n\nexport default ReducerRoot;\n","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: 'AIzaSyAoK21BpbTLv6sx_xgb30lxxPEXhC89uM8',\n  authDomain: 'react-projectmanagementtool.firebaseapp.com',\n  databaseURL: 'https://react-projectmanagementtool.firebaseio.com',\n  projectId: 'react-projectmanagementtool',\n  storageBucket: 'react-projectmanagementtool.appspot.com',\n  messagingSenderId: '837354897817',\n  appId: '1:837354897817:web:cb4dd012f6beb3096d9308',\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport firebase from 'firebase';\nimport { createFirestoreInstance, reduxFirestore, getFirestore } from 'redux-firestore';\nimport { getFirebase } from 'react-redux-firebase';\nimport ReducerRoot from '../reducers/ReducerRoot';\nimport firebaseConfig from '../../config/firebaseConfig';\n\nconst logger = createLogger();\n\nexport const store = createStore(\n  ReducerRoot,\n  undefined,\n  compose(\n    applyMiddleware(logger, thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reduxFirestore(firebase, firebaseConfig),\n  ),\n);\n\nconst rrfConfig = {\n  userProfile: 'users',\n  useFirestoreForProfile: true,\n  attachAuthIsReady: true,\n};\n\nexport const rrfProps = {\n  firebase,\n  config: rrfConfig,\n  dispatch: store.dispatch,\n  createFirestoreInstance,\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider, useSelector } from 'react-redux';\nimport { ReactReduxFirebaseProvider, isLoaded } from 'react-redux-firebase';\nimport './index.css';\nimport App from './components/layout/App';\nimport * as serviceWorker from './serviceWorker';\nimport { store, rrfProps } from './reduxs/store/store';\n\nconst AuthIsLoaded = ({ children }) => {\n  const auth = useSelector(state => state.firebaseState.auth);\n  if (!isLoaded(auth)) return <div />;\n  return children;\n};\n\nReactDOM.render(\n  <Provider store={store}>\n    {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n    <ReactReduxFirebaseProvider {...rrfProps}>\n      <AuthIsLoaded>\n        <App />\n      </AuthIsLoaded>\n    </ReactReduxFirebaseProvider>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './Navbar';\nimport Dashboard from '../dashboard/Dashboard';\nimport Projectdetail from '../project/Projectdetail';\nimport Signin from '../auth/Signin';\nimport Signup from '../auth/Signup';\nimport Createproject from '../project/Createproject';\n\nexport default function App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route path=\"/project/:id\" component={Projectdetail} />\n          <Route path=\"/signin\" component={Signin} />\n          <Route path=\"/signup\" component={Signup} />\n          <Route path=\"/create\" component={Createproject} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n"],"sourceRoot":""}